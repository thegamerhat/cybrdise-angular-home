@import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@700&display=swap');

/* CSS for this component */

.pro-btn-goback {
    font-size: 18px;
    margin-top: 40px;
    padding-top: 15px;
    padding-bottom: 15px;
    padding-right: 20px;
    padding-left: 20px;
    border-color: #00000000;
    color: white;
    width: auto;
    min-width: 150px;
    max-width: 300px;
    background-color:#1E1E1E;
    border-radius: 5px;
    cursor: pointer;
}

.pro-btn-goback:hover {
    background-color:#2e2e2e;
}


/* CUBE ANIMATION */

.ani-container {
    position: relative;
    justify-content: center;
    align-items: center;
    height:max-content;
    width: max-content;
    margin: 0;
}
.ani-flex {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 80px;
    height: 80px;

    /* Margin here is the vertical margin_you_want between the 3 layers */
    margin: 10px;
}

/* cube */
.cube {
    position: relative;
    width: 1px;
    height: 1px;
    /* Margin will only be horizontal, because there are 3 different layers containing 3 cubes each.
    
    Margin = (width_of_cube/2) + (margin_you_want/2)
    */
    margin: 45px;

    /* margin: 0 80px 0 0; */
    /* border: solid 1px rgb(70, 70, 70); */
    /* border-radius: 20px; */
    transform-style: preserve-3d;
}
.wall {
    width: 80px;
    height: 80px;
    margin: 10px;
    position: absolute;
    left: calc(-80px / 2);
    top: calc(-80px / 2);
    text-align: center;
    line-height: 100px;
    border: solid 1px rgb(70, 70, 70);
    border-radius: 30px;
    
}
.front {
    transform: translateZ(calc(80px / 2));
}
.back {
    transform: translateZ(calc(-80px / 2)) rotateY(180deg);
}
.right {
    transform: translateX(calc(80px / 2)) rotateY(90deg);
}
.left {
    transform: translateX(calc(-80px / 2)) rotateY(-90deg);
}
.top {
    transform: translateY(calc(-80px / 2)) rotateX(90deg);
}
.bottom {
    transform: translateY(calc(80px / 2)) rotateX(-90deg);
}
/* animation */
.ani-flex:nth-of-type(4) .cube:nth-of-type(1) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.5s forwards;
}
.ani-flex:nth-of-type(3) .cube:nth-of-type(1) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.6s forwards;
}
.ani-flex:nth-of-type(4) .cube:nth-of-type(2) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.6s forwards;
}
.ani-flex:nth-of-type(2) .cube:nth-of-type(1) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.7s forwards;
}
.ani-flex:nth-of-type(3) .cube:nth-of-type(2) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.7s forwards;
}
.ani-flex:nth-of-type(4) .cube:nth-of-type(3) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.8s forwards;
}
.ani-flex:nth-of-type(1) .cube:nth-of-type(1) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.8s forwards;
}
.ani-flex:nth-of-type(2) .cube:nth-of-type(2) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.8s forwards;
}
.ani-flex:nth-of-type(3) .cube:nth-of-type(3) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.8s forwards;
}
.ani-flex:nth-of-type(4) .cube:nth-of-type(4) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.8s forwards;
}
.ani-flex:nth-of-type(1) .cube:nth-of-type(2) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.9s forwards;
}
.ani-flex:nth-of-type(2) .cube:nth-of-type(3) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.9s forwards;
}
.ani-flex:nth-of-type(3) .cube:nth-of-type(4) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 0.9s forwards;
}
.ani-flex:nth-of-type(1) .cube:nth-of-type(3) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 1s forwards;
}
.ani-flex:nth-of-type(2) .cube:nth-of-type(4) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 1s forwards;
}
.ani-flex:nth-of-type(1) .cube:nth-of-type(4) {
    animation: rotation 3s cubic-bezier(0.215, 0.61, 0.355, 1) 1.1s forwards;
}
@keyframes rotation {
    100% {
        transform: rotateX(270deg) rotateY(270deg);
   }
}
.wall {
    animation: color 2s linear 1.5s forwards;
}
@keyframes color {
    100% {
        background-color: rgb(70, 70, 70);
   }
}
